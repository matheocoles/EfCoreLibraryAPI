1. Créer un projet web d'API Web .NET 8 en laissant les réglages par défaut
2. Créer les dossiers Models / DTO / Endpoints / Migrations
3. Copier-coller vos entités + le dbContext + les migrations du projet de démo EF
4. Modifier le Program.cs pour reprendre le contenu du cours tout remplacer
5. Installer EF / EFDesign / EF SQL Server + FastEndpoints + FastEndpoints.Swagger
6. Démarrer et tester le projet
7. Ecrire les Endpoints + les DTO de Auteur

Endpoints :
	Author :
		CreateAuthorEndpoint
		GetAllAuthorsEndpoint  (WithoutRequest, Response : Liste des authors)
		GetAuthorEndpoint      (GetAuthorRequest -> ID)
		UpdateAuthorEndpoint   (ID dans la route)
		DeleteAuthorEndpoint   (DeleteAuthorRequest -> ID dans la route)
DTO : 
	Author : 
		Request :
			CreateAuthorDto -> Name, FirstName
			UpdateAuthorDto -> ID, Name, FirstName
		Response :
			GetAuthorDto -> ID, Name, FirstName
	

Flattening

Mettre author dans book et ne pas utiliser le getauthordto dans la gestion de book
Loan -> que les ID de book et user dans le create
PlannedReturningDate -> a calculer + 2 mois donc enlever du dto create
EffectiveReturningDate -> ne pas mettre dans le create et mettre un patch => /api/loans/{@id}/effecivereturn